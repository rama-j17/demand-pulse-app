# -*- coding: utf-8 -*-
"""utils

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Mo8BwzphDNR-v0aivqcl-qrQzE8RxYCl
"""

import pandas as pd
from prophet import Prophet
import pickle

def load_data(path="data/train.csv"):
    """Loads and prepares the dataset."""
    df = pd.read_csv(path)
    df['Order Date'] = pd.to_datetime(df['Order Date'], dayfirst=True)
    df = df.sort_values('Order Date')

    # Aggregate sales daily
    daily_sales = df.groupby('Order Date')['Sales'].sum().reset_index()
    daily_sales.columns = ['ds', 'y']
    return daily_sales

def train_prophet_model(data):
    """Trains and returns a Prophet model."""
    model = Prophet()
    model.fit(data)
    return model

def save_model(model, path="prophet_model.pkl"):
    """Saves the Prophet model to disk."""
    with open(path, "wb") as f:
        pickle.dump(model, f)

def load_model(path="prophet_model.pkl"):
    """Loads the saved Prophet model."""
    with open(path, "rb") as f:
        model = pickle.load(f)
    return model

def make_forecast(model, periods=30):
    """Generates future forecast from the trained model."""
    future = model.make_future_dataframe(periods=periods)
    forecast = model.predict(future)
    return forecast